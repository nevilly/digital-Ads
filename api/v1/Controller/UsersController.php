<?php

include_once$_SERVER["DOCUMENT_ROOT"] ."/api/v1/Module/UsersModule.php";

class UsersController extends UsersModule
{
    /**
     * UsersController constructor.
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * @param $data
     * @return mixed
     */
    public function add($data){
        return parent::add($data);
    }

    public function update_user($data){
        return parent::update_user($data);
    }

    /**
     * @param string $id
     * @return array
     */
    public function get($id = ''){
        $user = parent::get($id);
        $data = false;

        if($user->num_rows > 0)
            if(!empty($id))
                $data = $user->fetch_object();
            else
                $data = $user->fetch_all(MYSQLI_ASSOC);

       return $data;
    }

    /**
     * @param string $id
     * @return array
     */
    public function getUserIdByToken($token){
        $user = parent::getUserIdByToken($token);
        $data = false;

        if($user->num_rows > 0)
            $data = $user->fetch_object();

       return $data;
    }

    /**
     * @param $value
     * @return false|mixed
     */
    public function get_users_by_roles($value)
    {
        $sql = parent::get_users_by_roles($value); // TODO: Change the autogenerated stub
        $data = false;
        if($sql){
            if($sql->num_rows > 0)
                $data = $sql->fetch_all(MYSQLI_ASSOC);
        }

        return $data;
    }

    /**
     * @param $value
     * @return false|mixed
     */
    public function get_user_by_email_or_username($value){
        $user = parent::get_user_by_email_or_username($value);
        $data = false;

        if($user->num_rows > 0)
            $data = $user->fetch_object();

        return $data;
    }

    /**
     * @param $data
     * @return mixed
     */
    public function reset_password($data)
    {
        return parent::reset_password($data); // TODO: Change the autogenerated stub
    }

    /**
     * @return array|false
     */
    public function users($id = ''){
        return self::get($id);//object|array
    }

    /**
     * @param $name
     * @param $password
     * @return false
     */
    public function check_user($name,$password){
        $sql = parent::check_user($name,$password);

        return $sql && $sql->num_rows > 0 ? $sql->fetch_object() : false; // return either true or false if user exists
    }

    /**
     * @param $token
     * @return bool
     */
    public function activate_user_by_token($token){
        return parent::activate_user_by_token($token);
    }
    /**
     * @param $id
     * @return false
     */
    public function delete_user($id){
        $status = false;

        if(self::exist_user($id))
            $status = parent::delete_user($id);

        return $status;
    }

    /**
     * @param $id
     * @return bool
     */
    public function exist_user($id){
        return parent::get($id)->num_rows > 0;
    }

}